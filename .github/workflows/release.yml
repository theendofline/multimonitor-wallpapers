name: Build and Release AppImage

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          # Install AppImage build dependencies
          sudo apt-get install -y libfuse2 desktop-file-utils libglib2.0-bin
          # Install Qt dependencies needed by PySide6
          sudo apt-get install -y libegl1 libgl1 libxcomposite1 libopengl0 libxrender1 libxcursor1 libxi6 libdrm2 libxau6 libxdmcp6 libxext6
          # Install additional standard libraries needed for Qt/PySide6
          sudo apt-get install -y libxkbcommon0 libdbus-1-3 libx11-6 libglib2.0-0 libfontconfig1 libcups2 libpango-1.0-0 libcairo2 libsm6 libxrandr2

      - name: Set up environment
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv venv
          source .venv/bin/activate
          uv pip install -r requirements.txt
          # Install development dependencies
          uv pip install build wheel setuptools
          pip install -e .

      - name: Build AppImage
        run: |
          source .venv/bin/activate
          python scripts/build_appimage.py

      - name: Test AppImage
        run: |
          # Make the AppImage executable
          chmod +x dist/*.AppImage
          # List files inside the dist directory
          ls -la dist/
          # Check if the AppImage was created properly
          if [ ! -f dist/*.AppImage ]; then
            echo "AppImage build failed: No AppImage file found in dist/"
            exit 1
          fi

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppImage
          path: dist/*.AppImage

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.AppImage
          name: Release ${{ github.ref_name }}
          body: |
            MultiMonitor Wallpapers ${{ github.ref_name }}
            
            ## Installation
            1. Download the AppImage file
            2. Make it executable: `chmod +x MultiMonitor-x86_64.AppImage`
            3. Run it: `./MultiMonitor-x86_64.AppImage`
            
            This is a standalone package that includes all dependencies.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
